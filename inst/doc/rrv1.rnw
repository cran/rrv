%\VignetteIndexEntry{Random_Return_Variables}

\documentclass {article}
\usepackage {maia2}
\SweaveOpts{keep.source=TRUE}
\SweaveOpts{prefix.string=tmp-rrv1}
\begin{document}

<<echo=false>>=
options(continue=" ")
options(SweaveHooks=list(fig=function()
par(mar=c(4.1, 4.1, 2.6, 1.6), cex=0.7, cex.main=1)))
@

\mtitle {rrv}{0.4.0}{Random Return Variables\\(Rewrite, Rough Draft)}

\mabstract {This vignette gives an overview of the rrv package. The package is partly based on Markowitz (1952), however considers empirical distributions. There's a strong emphasis on modelling conditional portfolio returns as functions of weight. Various ``conditional parameters'' are considered, including expected returns and quantile returns.}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {Introduction}

The rrv package provides an object oriented framework for modelling portfolio returns as random variables, with empirical distributions. It's partly based on Markowitz (1952), who provides a theoretical framework for modelling portfolio returns as random variables, with normal-like distributions.

The author defines a portfolio as a set of sources and a source as any process that generates return. In general, sources are assumed to be weighted, with weights summing to one. Under this assumption, a portfolio's return is a weighted average of it's source returns.

Currently, the package has the following over-arching goals:
\begin {enumerate}
	\item To model portfolio returns as random variables.
	\item To model conditional portfolio returns as functions of weight.
	\item To consider various kinds of portfolios.
	\item To consider portfolio optimisation.
\end {enumerate}

The package is based on object oriented principles and contains two main classes of objects. Firstly, random return variable (rrv) objects, representing unknown future returns, which are constructed from known historical returns. Secondly, conditional portfolio return (cpr) objects/functions, representing portfolio returns as functions of weight, which are also constructed from historical returns.

Future versions may also contain a portfolio class with summary methods.

The term ``conditional portfolio returns'' is used ambiguously and can refer to conditional random variables (random variables with conditional distributions) or conditional parameters. The term ``conditional parameters'' is used to describe parameters of conditional random variables, which can include expected values, variances and quantiles.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {Getting Started}

First, we need to load the rrv package:
<<>>=
library (rrv)
@

\noindent The package makes use of the dataset from Markowitz (1959), which gives discounted returns for nine securities over an eighteen year period.
<<>>=
data = read.package.data ("rrv", "markowitz.csv")
samp (data)
@

\noindent Consistent with Markowitz, lets consider expected values and variances.
<<>>=
summary.table = data.frame (expected.values=apply (data [,-1], 2, mean),
	variances=apply (data [,-1], 2, var) )
summary.table = summary.table [order (summary.table [,1], decreasing=TRUE),]
round (summary.table, 3)
@

\noindent A plot of variance versus expected values, supports the cliche notion in finance, that high return requires high risk.
\begin {center}
<<fig=TRUE, width=5, height=3>>=
plot (summary.table$variances, summary.table$expected.values) 
@
\end {center}

\noindent However, returns are often correlated, so lets consider pairwise correlations.
<<>>=
correlation.matrix = cor (data [,-1])
round (correlation.matrix, 1)
@

\noindent An important feature of this data, is that all pairwise combinations are positively correlated. Using the first two sources (which are strongly correlated), we can create a timeseries plot.
\begin {center}
<<fig=TRUE, width=5, height=3>>=
time = data [,1]
plot (time, data [,2], type="l", ylab="return")
lines (time, data [,3], lty=2)
@
\end {center}

\noindent Alternatively, we can create a bivariate rrv object (from the data) and plot it.
\begin {center}
<<fig=TRUE, width=5, height=3>>=
x = rrv (data [,2:3])
plot (x)
@
\end {center}

\noindent Source returns are discussed in more detail later. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {Conditional Portfolio Return}

For a given portfolio, we shall denote source returns as $\mathbf {X}$ or ($X_1, X_2, ..., X_k$), portfolio return as $Y$ and weights as $\mathbf {w}$ or ($w_1, w_2, ... w_k$). Both portfolio returns and source returns are random variables. $k$ is used to denote the number of sources. Portfolio return is weighted sum of source returns, so:
\begin {eqnarray*}
	Y	&=& \mathbf {w X}\\
		&=& w_1 X_1 + w_2 X_2 + ... + w_k X_k
\end {eqnarray*}

The rrv package implements cpr\_rrv objects, for this purpose. A cpr\_rrv object, follows some object oriented conventions and is created using a constructor. However, these objects are also functions and map a vector of weights  to an rrv object. If we denote our constructor as $\mathrm {G}$, our cpr\_rrv object as $\mathrm {f}$ and our data (a matrix or an rrv object) as $\mathbf {x}$, then we have:
\begin {eqnarray*}
	\mathrm {G} &:& \mathbf {x} \mapsto \mathrm {f}\\
	\mathrm {f} &:& \mathbf {w} \mapsto Y
\end {eqnarray*}

Whilst this may seem cumbersome at first, it's important to note that the function $\mathrm {f}$, only requires one argument, weight.

Let's consider an example. In practice, the package doesn't use $\mathrm {G}$, the constructor has the same name as the class of the object so:
<<>>=
#construct the object (also a function)
f = cpr_rrv (x)
f
@

\noindent We can evaluate this object, however rrv and rprv objects are discussed later, so the output probably won't make much sense at this stage.

The rrv package also implements cppr objects. Which are similar to cpr\_rrv objects, however simpler and more practical. Instead of mapping a vector of weights to a rrv object, they make a vector of weights to what we shall regard as a conditional parameter, such as expected return. There are a few subclasses, each with a different constructor.

Let's consider another example:
<<>>=
#construct the object (also a function)
f_expected = cpr_expected (x)
f_expected
@

We can plot and evaluate the object:
\begin {center}
<<fig=TRUE, width=5, height=3>>=
#plot of expected return as function of weight
plot (f_expected)
@
\end {center}

<<>>=
#evaluate it, for an equally weighted portfolio
f_expected (c (0.5, 0.5) )
@

\noindent Similarly for variance and quantiles, noting the cpr\_quantile constructor has an extra argument.
<<>>=
f_variance = cpr_variance (x)
f_q0.25 = cpr_quantile (0.25, x)
@

\begin {center}
<<fig=TRUE, width=5, height=3>>=
plot (f_variance)
@
<<fig=TRUE, width=5, height=3>>=
plot (f_q0.25)
@
\end {center}

\noindent There are also a cpr\_median and cpr\_sd classes.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {Conditional Portfolio Return for 3-Source Portfolios}

\input {v1s3}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {Text Book Plots}

Up until now, we have regarded conditional portfolio returns as functions of weight, plus plotted them as functions. Most textbooks (on finance) plot standard deviation (or variance) versus expected return. A prototype function, unimaginatively named, .textbookplot (with a dot), was added to the package, just before releasing the current version.

Currently, the plot produces incorrect output. For 3-source and 4-source portfolios, it plots 2-source subsets. Plus the function isn't tested well.

Despite these problems, we will still consider some examples.

\begin {center}
<<fig=TRUE, width=5, height=3>>=
#2-source, first two variables
.textbookplot (data [,2:3])
@

<<fig=TRUE, width=5, height=3>>=
#3-source, incorrect, giving 2-source subsets
m = as.matrix (data [,5:7])
.textbookplot (m)
#superimpose equally-weighted portfolio
w = c (1, 1, 1) / 3
x = cpr_sd (m)(w)
y = cpr_expected (m)(w)
points (x, y, cex=1.5) 
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {More on Source Returns}

In mainstream probability, a random variable is characterised by parameters (which in turn characterise it's distribution). However here (with empirical distribution functions), a random variable characterised by its realisations.

The rrv class, is used to represent random return variables, including random vector-return variables. An rrv object is simply an extended matrix, containing the realised values.

Currently, the package provides little support for modelling source returns.

As mentioned earlier, a portfolio class, may be added to future versions, for summary or exploratory purposes.

We can create rrv objects and plot them, here using an univariate example.
\begin {center}
<<fig=TRUE, width=5, height=3>>=
r = rrv (data [,2])
plot (r)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {More on Portfolio Returns}

The rrv class is extended by the rprv class, which is univariate version of rrv, created from an rrv object (or a matrix), along with vector of weights. Using the first three variables:
<<>>=
y = rprv (as.matrix (data [,2:4]), c (1, 1, 1) / 3)
@

\noindent The object $y$ represents a conditional random return variable or a random portfolio return variable. We can plot our rprv object, which looks similar to a univariate source return.
\begin {center}
<<fig=TRUE, width=5, height=3>>=
plot (y)
@
\end {center}

\noindent The values of $y$ are trivial to compute. Let $\mathbf {r}_i$ be the ith row vector of $\mathbf {x}$, then
\begin {eqnarray*}
	y_1 &=& \mathbf {w r}_1\\
	y_2 &=& \mathbf {w r}_2\\
		&\vdots \\
	y_n &=& \mathbf {w r}_n
\end {eqnarray*}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\msec {References}

Markowitz, H.M. (1952). Journal of Finance. Portfolio Selection.\\
Markowitz, H.M. (1959). Cowles Foundation. Portfolio Selection Efficient Diversification of Investments.

\end{document}


